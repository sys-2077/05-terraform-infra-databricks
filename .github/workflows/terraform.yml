name: 'Terraform - State'

on:
  pull_request:
    branches: [dev]

jobs:
  terraform:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Terraform Init
      run: terraform init
      working-directory: ./terraform-state
      env:
        ARM_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ secrets.AZURE_AD_CLIENT_SECRET }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        ARM_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}

    - name: Terraform Plan
      id: plan
      run: |
        terraform plan -no-color \
          -var-file="terraform.tfvars" \
          -out=tfplan
      working-directory: ./terraform-state
      env:
        ARM_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ secrets.AZURE_AD_CLIENT_SECRET }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        ARM_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}

    - name: Analyze Terraform Plan
      id: analyze
      run: |
        if grep -q "Plan: 0 to add, 0 to change, 0 to destroy" tfplan; then
          echo "::set-output name=apply::false"
        else
          echo "::set-output name=apply::true"
        fi
      working-directory: ./terraform-state

    - name: Terraform Apply
      if: steps.analyze.outputs.apply == 'true'
      run: terraform apply -auto-approve tfplan
      working-directory: ./terraform-state
      env:
        ARM_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ secrets.AZURE_AD_CLIENT_SECRET }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        ARM_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}