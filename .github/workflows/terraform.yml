name: 'Terraform - State'

on:
  pull_request:
    branches: [dev]

jobs:
  terraform-state:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Terraform Init
      run: terraform init
      working-directory: ./terraform-state

    - name: Terraform Refresh
      run: terraform refresh
      working-directory: ./terraform-state

    - name: Set Environment Variables
      run: |
        STORAGE_ACCOUNT_NAME=$(terraform output storage_account_name | sed 's/"//g')
        echo "STORAGE_ACCOUNT_NAME=$STORAGE_ACCOUNT_NAME" >> $GITHUB_ENV
        echo "Storage Account Name: $STORAGE_ACCOUNT_NAME"
      working-directory: ./terraform-state

    - name: Check if Storage Account Exists
      id: check_storage_account
      run: |
        check_result=$(az storage account check-name --name $STORAGE_ACCOUNT_NAME)
        echo "az storage account check-name --name $STORAGE_ACCOUNT_NAME --query nameAvailable"
        echo "az storage account check-name --name "$STORAGE_ACCOUNT_NAME" --query nameAvailable"
        echo $check_result
        echo "Storage Account Name: $STORAGE_ACCOUNT_NAME"
        if [[ "$check_result" == "true" ]]; then
          echo "::set-output name=exists::true"
          echo "Storage Account does not exist"
        else
          echo "::set-output name=exists::false"
          echo "Storage Account exists"
        fi
      

    - name: Terraform Plan
      if: steps.check_storage_account.outputs.exists == 'true'
      run: terraform plan
      working-directory: ./terraform-state

    - name: Terraform Apply
      if: steps.check_storage_account.outputs.exists == 'true'
      run: terraform apply -auto-approve
      working-directory: ./terraform-state
